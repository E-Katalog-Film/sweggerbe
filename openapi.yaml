openapi: 3.0.3
info:
  title: DOKUMEN API E-KATALOG MOBILE - OpenAPI 3.0
  description: >-
    Jelaskan disini apa saja yang perlu dijelaskan
    termasuk informasi yang diperlukan untuk dinilai
    term of service isi dari link repo dari swagger ini
  termsOfService: https://raulmahya123.github.io/sweggergis/
  contact:
    email: raulmahya11@gmail.com
  license:
    name: E-KATALOG MOBILE
    url: https://pkg.go.dev/github.com/Fancypedia/fancybackenddd
  version: 1.0.11
externalDocs:
  description: Repo GCF
  url: https://pkg.go.dev/github.com/Fancypedia/fancybackenddd
servers:
  - url: https://asia-southeast2-core-advice-401502.cloudfunctions.net
tags:
  - name: Login User
    description: Login User
paths:
  /getallcomment:
    get:
      tags:
        - Data Grafik Admin
      summary: Get Data all comment
      description: Get Data all comment
      operationId: Getcomment
      responses:
        '200':
          description: successful operation comment
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CretaeCOmment'
        '400':
          description: Invalid status value
  /getallproduct:
    get:
      tags:
        - Data Grafik Admin
      summary: Get Data all Product
      description: Get Data all Product
      operationId: getProduct
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CreateProduct'
        '400':
          description: Invalid status value
  /getallblog:
    get:
      tags:
        - Data Grafik Admin
      summary: Get Data all Blog
      description: Get Data all Blog
      operationId: Get Blog
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/blogfix'
        '400':
          description: Invalid status value
  /createaccount:
    post:
      tags:
        - USER
      summary: create account
      description: create account
      operationId: create account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createaccount'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createaccount'
        '405':
          description: Invalid input
  /getallaccount:
    get:
      tags:
        - USER
      summary: get account
      description: get account
      operationId: get account
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createaccount'
        '405':
          description: Invalid input
      security:
        - token: []
  /login:
    post:
      tags:
        - USER
      summary: Login User
      description: Login User
      operationId: Login User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth' # Gunakan skema yang sesuai di sini
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input or request body
      security:
        - token: []
  /getoken-login:
    post:
      tags:
        - USER
      summary: Get Token Login
      description: Get Token Login
      operationId: Get Token Login
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetToken'
        '400':
          description: Invalid input or request body
      security:
        - token: []             
components:
  schemas:
    GetToken:
      type: object
      required:
        - status
        - data
        - message
      properties:
        status:
          type: boolean
          description: status
        data:
          type: object
          description: data
        message:
          type: string
          description: message
    createaccount:
      type: object
      required:
        - email
        - password
        - name
        - role
      properties:
        email:
          type: string
          format: email
          description: email
        password:
          type: string
          format: password
          description: password
        name:
          type: string
          description: name
        role:
          type: string
          description: role
    AuthResponse:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: email
        password:
          type: string
          format: password
          description: password
    Authlogin:
      type: object
      required:
        - email
        - password
        - name
        - role
      properties:
        email:
          type: string
          format: email
          description: email
        password:
          type: string
          format: password
          description: password
        name:
          type: string
          description: name
        role:
          type: string
          description: admin | user
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
    Auth:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: email
        password:
          type: string
          format: password
          description: password
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
